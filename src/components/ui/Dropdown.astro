---
import { cn } from "~/lib/utils";

import Button from "./Button.astro";

type Props = {
  contentAlign?: "center" | "left" | "right" | undefined;
  triggerClass?: string;
  triggerSize?: "default" | "icon" | "lg" | "sm" | undefined;
  triggerVariant?:
    | "default"
    | "destructive"
    | "expandIcon"
    | "ghost"
    | "gooeyLeft"
    | "gooeyRight"
    | "link"
    | "linkHover1"
    | "linkHover2"
    | "outline"
    | "ringHover"
    | "secondary"
    | "shine"
    | undefined;
};

const {
  contentAlign,
  triggerVariant = "default",
  triggerSize = "default",
  triggerClass = "",
} = Astro.props;
---

<ui-dropdown
  class={cn(
    `relative dropdown`,
    contentAlign ? `dropdown-align-${contentAlign}` : "",
  )}
>
  <Button
    class={cn("trigger-button", triggerClass)}
    size={triggerSize}
    type="button"
    variant={triggerVariant}
  >
    <slot name="trigger" />
  </Button>
  <slot name="content" />
</ui-dropdown>
<script>
  class Dropdown extends HTMLElement {
    constructor() {
      super();

      const triggerButton = this.querySelector(".trigger-button");
      const content = this.querySelector("ul");

      if (!triggerButton || !content) {
        return;
      }

      triggerButton.addEventListener("click", () => {
        content.dataset.state =
          content.dataset.state === "open" ? "closed" : "open";
      });

      document.addEventListener("click", (e) => {
        if (!triggerButton.contains(e.target as Node)) {
          if (content.dataset.state === "open") {
            content.dataset.state = "closed";
          }
        }
      });
    }
  }

  customElements.define("ui-dropdown", Dropdown);
</script>
